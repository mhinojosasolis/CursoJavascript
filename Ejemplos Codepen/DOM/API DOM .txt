2 - With the DOM API (old fashioned)

These methods are from the DOM API and can all be replaced by the querySelector and querySelectorAll methods that we've discussed. They are still used in many JavaScript applications, and are very simple to understand.

From the document we can access the elements composing our web page in a few ways:

document.getElementById(identifier) returns the element which has the id “identifier”.
This is equivalent to document.querySelector("#identifier'); (just add a # before the id when using a CSS selector). 

Example: var elm = document.getElementById('myDiv'); is equivalent to document.querySelector('#myDiv');

document.getElementsByTagName(tagName) returns a list of elements which are named “tagName”.
This is equivalent to document.querySelectorAll(tagName);

Example: var list = document.getElementByTagName('img'); is equivalent to document.querySelector('img');

document.getElementsByClassName(className) returns a list of elements which have the class “className”.
This is equivalent to document.querySelectorAll('.className'); 

Example: var list = document.getElementByClassName('important'); is equivalent to document.querySelector('.important'); (just add a '.' before the class name when using a CSS selector). 

Notice that identifier, tagName and className must be of type String. 